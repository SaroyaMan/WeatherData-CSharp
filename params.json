{
  "name": "WeatherData library for C# developers",
  "tagline": "Library that gives you a Weather data from different REStful web services (in C#)",
  "body": "### Description\r\nThis library made to developers who wants to get easly the current Weather in different places around the world.\r\nThis library  made for C# developers. The big advantage that using that library is very easy, the code is an [open source,](https://github.com/SaroyaMan/WeatherData-CSharp) so you can easly create your own WeatherData REStful web services just by creating a class that implements IWeatherDataService, and add the relevant constant to the static WeatherDataServiceFactory class (don't forget to extend the switch-case in GetWeatherDataService inside the factory class).\r\n\r\n### How-to install\r\n1. Download and extract the Library itself from my [git page.](https://github.com/SaroyaMan/WeatherData-CSharp)\r\n2. On a project you are willing to use the library - right click on project and then Add -> Reference.\r\n3. Browse the 2 DLL files from the extracted zip.\r\n4. Add the directive 'Weather' (using Weather;) inside your source file.\r\n5. That's it, you can now use the library!\r\n\r\n### API in a nutshell\r\n#### The classes:\r\n* **Location:** Represents the location data of the WeatherData object is based on.\r\n* **WeatherData:** Represents the weather of the selected location. All fields in this class are defined as read-only. once WeatherData is created by a specific location, you cannot change it's state.\r\n* **IWeatherDataService:** Represents a weather REStful web service. each class that implements it must create WeatherData object with his own way.\r\n* **WeatherDataServiceException:** Extends Exception.Represents an exception that caused by using the library as a result of bad connection to one of the web services, or failing to parse the data, and etc.\r\n* **WeatherDataServiceFactory:** Represents the factory who responsible to create a weather REStful web services objects. Each const variable represents one weather web service. This class implements the factory method design pattern.\r\n* **ApixuDataService:** Represents a REStful web service of http://www.apixu.com and it implements the inteface IWeatherDataService - means it responsible to create a WeatherData object with all data according to this web service. This class implements the singleton design pattern\r\n* **OpenWeatherMapDataService:** Represents a REStful web service of http://www.openweathermap.org and it implements the inteface IWeatherDataService - means it responsible to create a WeatherData object with all data according to this web service. This class implements the singleton design pattern\r\n\r\n#### The Unit Test classes:\r\n* **ApixuDataServiceTest:** Represents a test class that checks ApixuDataService works correctly.\r\n* **OpenWeatherMapDataServiceTest:** Represents a test class that checks OpenWeatherMapDataService works correctly.\r\n\r\n### Example\r\nThis short application demonstrates the usage of Weather library.\r\n***\r\n```c#\r\nusing System;\r\nusing Weather;\r\n\r\nnamespace Test\r\n{\r\n\tinternal class WeatherDemo\r\n\t{\r\n\t\tpublic static void Main()\r\n\t\t{\r\n\t\t\ttry\r\n\t\t\t{\r\n\t\t\t\tIWeatherDataService service = WeatherDataServiceFactory.\r\n\t\t\t\t\tGetWeatherDataService(WeatherDataServiceFactory.OPEN_WEATHER_MAP);\r\n\t\t\t\tWeatherData weatherData = service.GetWeatherData(new Location(\"London\"));\r\n\t\t\t\tConsole.WriteLine(weatherData + \"\\n\");\r\n\r\n\t\t\t\tIWeatherDataService service2 = WeatherDataServiceFactory.\r\n\t\t\t\t\tGetWeatherDataService(WeatherDataServiceFactory.APIXU);\r\n\t\t\t\tWeatherData weatherData2 = service2.GetWeatherData(new Location(51.52,-0.11));\r\n\t\t\t\tConsole.WriteLine(weatherData2);\r\n\t\t\t}\r\n\t\t\tcatch(WeatherDataServiceException e)\r\n\t\t\t{\r\n\t\t\t\tConsole.WriteLine(e.Message);\r\n\t\t\t}\r\n\t\t\tConsole.Read();     //Remove it if you are using Window Application output type.\r\n\t\t}\r\n\t}\r\n}\r\n```\r\n![Output window](http://s16.postimg.org/z4rey1mwl/output.png)\r\n\r\n### Authors and Contributors\r\nFor any questions and notes - you can always contact with Yoav Saroya (@SaroyaMan) - stankovic100@gmail.com\r\n* **category:** utility library.\r\n* **last update:** 22/09/2016.\r\n* **authors:** Yoav Saroya - 304835887 & Sharon Yosef - 305345118.\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}